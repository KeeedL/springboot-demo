services:
  mssql:
    image: ${MSSQL__IMAGE}
    volumes:
      - mssql-pvc:/var/opt/mssql
    ports:
      - ${MSSQL__PORT}:${MSSQL__PORT}
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL__PASSWORD}
      - TZ=Europe/Zurich
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S mssql -U ${MSSQL__USER} -P ${MSSQL__PASSWORD} -Q 'CREATE DATABASE kafka_poc' || exit 1
      interval: 3s
      retries: 40
    networks:
      - poc-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
    networks:
      - poc-network

  kafka-1:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - poc-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - '9090:8080'
    depends_on:
      - zookeeper
      - kafka-1
      #- kafka-2
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - poc-network

  kafka-create-topics:
    image: bitnami/kafka:latest
    depends_on:
      - kafka-1
    command: >
      /bin/bash -c '
      sleep 10;
      kafka-topics.sh --create --bootstrap-server kafka-1:19092 --replication-factor 1 --partitions 2 --topic ${KAFKA__TOPIC};
      '
    networks:
      - poc-network



networks:
  poc-network:

volumes:
  mssql-pvc:
    driver: local
